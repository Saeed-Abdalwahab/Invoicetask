@model TechnicalTask.ViewModels.StoreVM

@{
    ViewBag.Title = "Stores";
}



<style>
    .modal-body {
        height: auto;
    }
</style>

<div class="text-center">
    <h3 class="center info">Stores</h3>
</div>

<div class="modal fade bd-example-modal-sm" id="MyModal">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <a href="#" class="close" data-dismiss="modal">&times;</a>
                <h4 id="Modaltitle"></h4>
            </div>
            <div class="modal-body" style="height:auto;overflow-y:hidden">
                <form id="form">
                    <div class="form-horizontal">

                        @Html.HiddenFor(m => m.ID)
                        <div class="form-group">
                            @Html.LabelFor(x => x.Name, htmlAttributes: new { @class = "control-label col-md-1" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })

                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>


                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <div class="text-left">
                    <a href="#" class="btn btn-primary" id="SAVEREC">Save</a>
                    <a href="#" class="btn btn-primary" data-dismiss="modal">Cancel</a>

                </div>
            </div>
        </div>
    </div>
</div>

<div class="container" style="margin-top:3%">
    <button class="btn btn-success btn-lg btn-round navbar-fixed-bottom" id="ADDNEWREC" data-toggle="popover" data-trigger="hover" data-placement="top" data-content="Add New" style="left:74%;bottom:15%"><i class="fa fa-plus"></i> </button>

    <table class="table table-striped jambo_table bulk-action">
        <thead>
            <tr>
                <th>
                    #
                </th>
                <th>
                    @Html.DisplayNameFor(x => x.Name)
                </th>
                <th style="width:80px"></th>
            </tr>
        </thead>

        <tbody></tbody>
    </table>
</div>
@section scripts
{

    <script>
        function MapJson(Obj, form) {
            $.each(Obj, function (key, value) {
                form.find("input[name='" + key + "']").val(value);
                form.find("select[name='" + key + "']").val(value);
            });
        }
        var DATATABLE = "";
                //Show Delet Msg Confirmation
    function DeleteConfirmation(id) {
        bootbox.confirm({
            title:"Delete",
            message: "Are You Shure ?",
            size: 'small',
            buttons: {
                cancel: {
                    label: '<i class="fa fa-times"></i>Cancel',
                    className: 'btn-info'
                },
                confirm: {
                    label: '<i class="fa fa-check"></i> Confirm',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result == true) {
                    deleteRecord(id)
                }
                else {
                    return true;
                }
            }
        });

    }
         function deleteRecord(id) {
            $.ajax({
                type: "post",
                url: '@Url.Action("Delete","Stores")' + '?ID=' + id,

                success: function (respons) {
                    debugger
                    if (respons.status) {
                        toastr.success("", respons.Msg, { timeOut: 3000 });
                        DATATABLE.ajax.reload();

                    }
                    else {
                    toastr.error("",respons.Msg ,{ timeOut: 1000 });

                    }

                },

                fail: function (xhr, msg, errorThrown) {
                    toastr.error("Somthing Goes Wrong", msg, { timeOut: 1000 });

                },
                error: function (xhr, statusText, errorThrown) {
                    toastr.error("Delete Faild",'' ,{ timeOut: 1000 });
                }
            });

        }
            function Save() {
                if ($("#form").valid()) {

                var data = $("#form").serialize();
                $.ajax({
                    type: "post",
                    url: "@Url.Action("save","Stores")",
                    data: data,
                    success: function (response) {
                        if (response.status == true) {

                            DATATABLE.ajax.reload();
                            toastr.success("Successfully Save", '', { timeOut: 4000 });
                            if (data.split("&")[0] == "ID=0") {
                                AddNew();
                                $("#MyModal").modal("hide");

                            }
                            else
                            {
                            $("#MyModal").modal("hide");
                            }
                        }
                        else {
                            toastr.error("Save Faild", response.Msg, { timeOut: 3000 });

                        }
                    }


                });
            }
            else {
                    return false;
                }
        }


            function AddNew() {
            $("#form")[0].reset();
            $("#Modaltitle").html("Add Store");
                $("#ID").val("0");
                $("span[id*='error']").text("");
                $("#MyModal").modal("show")
        }

        function Edit(id) {
            $("#Modaltitle").html("Edit");
            $.ajax({
                type: "GET",
                url: "@Url.Action("GetbyID","Stores")"+"/"+id,
                success: function (rs) {

                    MapJson(rs, $("form"));
                $("span[id*='error']").text("");
                    $("#MyModal").modal();
                }
            })
        }


    $(document).ready(function () {
        $("input").keyup(function (e) {
            if (e.keyCode == 13) {
                Save();
                $("[class*='input-validation-error']").focus();

            }
        });
        $("#ADDNEWREC").click(function () {
            AddNew(0);
        });

             DATATABLE = $('table').DataTable({
                "ajax": {
                    'url': "@Url.Action("Getall","Stores")",
                    'type': "GET"
                },
                "columns": [
                    {
                        "data": null, "render": function (data, type, full, meta) {
                            return meta.row + 1;
                        }
                    },

                    { "data": "Name" },

                    {
                        "data": "ID", "render": function (data) {

                            return "<botton class='btn btn-primary'  onclick='Edit(" + data + ")'><i class='fa fa-edit'></i></botton>" + "<botton class='btn btn-danger ED'  onclick='DeleteConfirmation(" + data + ")'><i class='fa fa-trash'></i></span></botton>"
                        }
                    },



                ],
                info: false,

            })
            DATATABLE.on('order.dt search.dt', function () {
                DATATABLE.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                });
            }).draw();

                $("#SAVEREC").click(function () {
            Save();
                });



    });


    </script>
}
